// <auto-generated />
using System;
using GossipGastropodsBackEnd.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GossipGastropodsBackEnd.Migrations
{
    [DbContext(typeof(GossipContext))]
    [Migration("20190607163030_AddCommentsTable")]
    partial class AddCommentsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GossipGastropodsBackEnd.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsEdited");

                    b.Property<Guid?>("OwnerGUID");

                    b.Property<int>("PostId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerGUID");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GossipGastropodsBackEnd.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FilePaths");

                    b.Property<bool>("IsEdited");

                    b.Property<Guid>("UserGuid");

                    b.HasKey("Id");

                    b.HasIndex("UserGuid");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("GossipGastropodsBackEnd.Entities.User", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("EmailVerified");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("ProfilePicture");

                    b.HasKey("GUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GossipGastropodsBackEnd.Entities.Comment", b =>
                {
                    b.HasOne("GossipGastropodsBackEnd.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerGUID");

                    b.HasOne("GossipGastropodsBackEnd.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GossipGastropodsBackEnd.Entities.Post", b =>
                {
                    b.HasOne("GossipGastropodsBackEnd.Entities.User", "Owner")
                        .WithMany("Posts")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
